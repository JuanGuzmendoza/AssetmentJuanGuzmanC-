### YamlMime:ManagedReference
items:
- uid: Hospital.Models.Person
  commentId: T:Hospital.Models.Person
  id: Person
  parent: Hospital.Models
  children:
  - Hospital.Models.Person.#ctor
  - Hospital.Models.Person.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)
  - Hospital.Models.Person.Address
  - Hospital.Models.Person.Age
  - Hospital.Models.Person.DocumentNumber
  - Hospital.Models.Person.Email
  - Hospital.Models.Person.Id
  - Hospital.Models.Person.Name
  - Hospital.Models.Person.Phone
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: Person
  fullName: Hospital.Models.Person
  type: Class
  source:
    id: Person
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 6
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: >-
    Represents a person (either a patient or doctor) in the hospital system.

    This class contains common properties shared by all persons in the system.
  example: []
  syntax:
    content: public abstract class Person
    content.vb: Public MustInherit Class Person
  inheritance:
  - System.Object
  derivedClasses:
  - Hospital.Models.Doctor
  - Hospital.Models.Patient
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Hospital.Models.Person.Id
  commentId: P:Hospital.Models.Person.Id
  id: Id
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Person.Id
  fullName: Hospital.Models.Person.Id
  type: Property
  source:
    id: Id
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 11
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Gets or sets the unique identifier for the person.
  example: []
  syntax:
    content: public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property Id As Guid
  overload: Hospital.Models.Person.Id*
- uid: Hospital.Models.Person.Name
  commentId: P:Hospital.Models.Person.Name
  id: Name
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Person.Name
  fullName: Hospital.Models.Person.Name
  type: Property
  source:
    id: Name
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 16
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Gets or sets the name of the person.
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Hospital.Models.Person.Name*
- uid: Hospital.Models.Person.Age
  commentId: P:Hospital.Models.Person.Age
  id: Age
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Age
  nameWithType: Person.Age
  fullName: Hospital.Models.Person.Age
  type: Property
  source:
    id: Age
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 21
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Gets or sets the age of the person.
  example: []
  syntax:
    content: public int Age { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Age As Integer
  overload: Hospital.Models.Person.Age*
- uid: Hospital.Models.Person.Address
  commentId: P:Hospital.Models.Person.Address
  id: Address
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Person.Address
  fullName: Hospital.Models.Person.Address
  type: Property
  source:
    id: Address
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 26
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Gets or sets the address of the person.
  example: []
  syntax:
    content: public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Address As String
  overload: Hospital.Models.Person.Address*
- uid: Hospital.Models.Person.Phone
  commentId: P:Hospital.Models.Person.Phone
  id: Phone
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Phone
  nameWithType: Person.Phone
  fullName: Hospital.Models.Person.Phone
  type: Property
  source:
    id: Phone
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 31
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Gets or sets the phone number of the person.
  example: []
  syntax:
    content: public string Phone { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Phone As String
  overload: Hospital.Models.Person.Phone*
- uid: Hospital.Models.Person.Email
  commentId: P:Hospital.Models.Person.Email
  id: Email
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: Person.Email
  fullName: Hospital.Models.Person.Email
  type: Property
  source:
    id: Email
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 36
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Gets or sets the email address of the person.
  example: []
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Hospital.Models.Person.Email*
- uid: Hospital.Models.Person.DocumentNumber
  commentId: P:Hospital.Models.Person.DocumentNumber
  id: DocumentNumber
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: DocumentNumber
  nameWithType: Person.DocumentNumber
  fullName: Hospital.Models.Person.DocumentNumber
  type: Property
  source:
    id: DocumentNumber
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 42
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: >-
    Gets or sets the document number (e.g., ID or social security number) of the person.

    This acts as a unique identifier for the person.
  example: []
  syntax:
    content: public string DocumentNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DocumentNumber As String
  overload: Hospital.Models.Person.DocumentNumber*
- uid: Hospital.Models.Person.#ctor
  commentId: M:Hospital.Models.Person.#ctor
  id: '#ctor'
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Person()
  nameWithType: Person.Person()
  fullName: Hospital.Models.Person.Person()
  type: Constructor
  source:
    id: .ctor
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 47
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Initializes a new instance of the <xref href="Hospital.Models.Person" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: protected Person()
    content.vb: Protected Sub New()
  overload: Hospital.Models.Person.#ctor*
  nameWithType.vb: Person.New()
  fullName.vb: Hospital.Models.Person.New()
  name.vb: New()
- uid: Hospital.Models.Person.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)
  commentId: M:Hospital.Models.Person.#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Int32,System.String,System.String,System.String,System.String)'
  parent: Hospital.Models.Person
  langs:
  - csharp
  - vb
  name: Person(string, int, string, string, string, string)
  nameWithType: Person.Person(string, int, string, string, string, string)
  fullName: Hospital.Models.Person.Person(string, int, string, string, string, string)
  type: Constructor
  source:
    id: .ctor
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Models/Person.cs
    startLine: 58
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Models
  summary: Initializes a new instance of the <xref href="Hospital.Models.Person" data-throw-if-not-resolved="false"></xref> class with the specified details.
  example: []
  syntax:
    content: protected Person(string name, int age, string address, string phone, string email, string documentNumber)
    parameters:
    - id: name
      type: System.String
      description: The name of the person.
    - id: age
      type: System.Int32
      description: The age of the person.
    - id: address
      type: System.String
      description: The address of the person.
    - id: phone
      type: System.String
      description: The phone number of the person.
    - id: email
      type: System.String
      description: The email address of the person.
    - id: documentNumber
      type: System.String
      description: The document number (e.g., ID or social security number) of the person.
    content.vb: Protected Sub New(name As String, age As Integer, address As String, phone As String, email As String, documentNumber As String)
  overload: Hospital.Models.Person.#ctor*
  nameWithType.vb: Person.New(String, Integer, String, String, String, String)
  fullName.vb: Hospital.Models.Person.New(String, Integer, String, String, String, String)
  name.vb: New(String, Integer, String, String, String, String)
references:
- uid: Hospital.Models
  commentId: N:Hospital.Models
  href: Hospital.html
  name: Hospital.Models
  nameWithType: Hospital.Models
  fullName: Hospital.Models
  spec.csharp:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Models
    name: Models
    href: Hospital.Models.html
  spec.vb:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Models
    name: Models
    href: Hospital.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Hospital.Models.Person.Id*
  commentId: Overload:Hospital.Models.Person.Id
  href: Hospital.Models.Person.html#Hospital_Models_Person_Id
  name: Id
  nameWithType: Person.Id
  fullName: Hospital.Models.Person.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Hospital.Models.Person.Name*
  commentId: Overload:Hospital.Models.Person.Name
  href: Hospital.Models.Person.html#Hospital_Models_Person_Name
  name: Name
  nameWithType: Person.Name
  fullName: Hospital.Models.Person.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Hospital.Models.Person.Age*
  commentId: Overload:Hospital.Models.Person.Age
  href: Hospital.Models.Person.html#Hospital_Models_Person_Age
  name: Age
  nameWithType: Person.Age
  fullName: Hospital.Models.Person.Age
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Hospital.Models.Person.Address*
  commentId: Overload:Hospital.Models.Person.Address
  href: Hospital.Models.Person.html#Hospital_Models_Person_Address
  name: Address
  nameWithType: Person.Address
  fullName: Hospital.Models.Person.Address
- uid: Hospital.Models.Person.Phone*
  commentId: Overload:Hospital.Models.Person.Phone
  href: Hospital.Models.Person.html#Hospital_Models_Person_Phone
  name: Phone
  nameWithType: Person.Phone
  fullName: Hospital.Models.Person.Phone
- uid: Hospital.Models.Person.Email*
  commentId: Overload:Hospital.Models.Person.Email
  href: Hospital.Models.Person.html#Hospital_Models_Person_Email
  name: Email
  nameWithType: Person.Email
  fullName: Hospital.Models.Person.Email
- uid: Hospital.Models.Person.DocumentNumber*
  commentId: Overload:Hospital.Models.Person.DocumentNumber
  href: Hospital.Models.Person.html#Hospital_Models_Person_DocumentNumber
  name: DocumentNumber
  nameWithType: Person.DocumentNumber
  fullName: Hospital.Models.Person.DocumentNumber
- uid: Hospital.Models.Person
  commentId: T:Hospital.Models.Person
  parent: Hospital.Models
  href: Hospital.Models.Person.html
  name: Person
  nameWithType: Person
  fullName: Hospital.Models.Person
- uid: Hospital.Models.Person.#ctor*
  commentId: Overload:Hospital.Models.Person.#ctor
  href: Hospital.Models.Person.html#Hospital_Models_Person__ctor
  name: Person
  nameWithType: Person.Person
  fullName: Hospital.Models.Person.Person
  nameWithType.vb: Person.New
  fullName.vb: Hospital.Models.Person.New
  name.vb: New
