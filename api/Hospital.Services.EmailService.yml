### YamlMime:ManagedReference
items:
- uid: Hospital.Services.EmailService
  commentId: T:Hospital.Services.EmailService
  id: EmailService
  parent: Hospital.Services
  children:
  - Hospital.Services.EmailService.SendAppointmentEmailAsync(Hospital.Models.Appointment,System.String,Hospital.Models.Doctor,Hospital.Models.EmailAction)
  - Hospital.Services.EmailService.ViewAllEmailHistoryAsync
  langs:
  - csharp
  - vb
  name: EmailService
  nameWithType: EmailService
  fullName: Hospital.Services.EmailService
  type: Class
  source:
    id: EmailService
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Service/EmailService.cs
    startLine: 13
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Services
  summary: Service for managing and sending appointment-related emails to patients.
  example: []
  syntax:
    content: public static class EmailService
    content.vb: Public Module EmailService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Hospital.Services.EmailService.SendAppointmentEmailAsync(Hospital.Models.Appointment,System.String,Hospital.Models.Doctor,Hospital.Models.EmailAction)
  commentId: M:Hospital.Services.EmailService.SendAppointmentEmailAsync(Hospital.Models.Appointment,System.String,Hospital.Models.Doctor,Hospital.Models.EmailAction)
  id: SendAppointmentEmailAsync(Hospital.Models.Appointment,System.String,Hospital.Models.Doctor,Hospital.Models.EmailAction)
  parent: Hospital.Services.EmailService
  langs:
  - csharp
  - vb
  name: SendAppointmentEmailAsync(Appointment, string, Doctor, EmailAction)
  nameWithType: EmailService.SendAppointmentEmailAsync(Appointment, string, Doctor, EmailAction)
  fullName: Hospital.Services.EmailService.SendAppointmentEmailAsync(Hospital.Models.Appointment, string, Hospital.Models.Doctor, Hospital.Models.EmailAction)
  type: Method
  source:
    id: SendAppointmentEmailAsync
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Service/EmailService.cs
    startLine: 42
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Services
  summary: >-
    Sends an appointment-related email to a patient.

    The content of the email depends on whether it's a confirmation or cancellation.
  example: []
  syntax:
    content: public static Task SendAppointmentEmailAsync(Appointment appointment, string patientEmail, Doctor selectedDoctor, EmailAction action)
    parameters:
    - id: appointment
      type: Hospital.Models.Appointment
      description: The appointment details.
    - id: patientEmail
      type: System.String
      description: The email address of the patient.
    - id: selectedDoctor
      type: Hospital.Models.Doctor
      description: The doctor associated with the appointment.
    - id: action
      type: Hospital.Models.EmailAction
      description: The type of email action (Confirmation or Cancellation).
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function SendAppointmentEmailAsync(appointment As Appointment, patientEmail As String, selectedDoctor As Doctor, action As EmailAction) As Task
  overload: Hospital.Services.EmailService.SendAppointmentEmailAsync*
  nameWithType.vb: EmailService.SendAppointmentEmailAsync(Appointment, String, Doctor, EmailAction)
  fullName.vb: Hospital.Services.EmailService.SendAppointmentEmailAsync(Hospital.Models.Appointment, String, Hospital.Models.Doctor, Hospital.Models.EmailAction)
  name.vb: SendAppointmentEmailAsync(Appointment, String, Doctor, EmailAction)
- uid: Hospital.Services.EmailService.ViewAllEmailHistoryAsync
  commentId: M:Hospital.Services.EmailService.ViewAllEmailHistoryAsync
  id: ViewAllEmailHistoryAsync
  parent: Hospital.Services.EmailService
  langs:
  - csharp
  - vb
  name: ViewAllEmailHistoryAsync()
  nameWithType: EmailService.ViewAllEmailHistoryAsync()
  fullName: Hospital.Services.EmailService.ViewAllEmailHistoryAsync()
  type: Method
  source:
    id: ViewAllEmailHistoryAsync
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Service/EmailService.cs
    startLine: 186
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Services
  summary: Views the history of all sent emails.
  example: []
  syntax:
    content: public static Task ViewAllEmailHistoryAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function ViewAllEmailHistoryAsync() As Task
  overload: Hospital.Services.EmailService.ViewAllEmailHistoryAsync*
references:
- uid: Hospital.Services
  commentId: N:Hospital.Services
  href: Hospital.html
  name: Hospital.Services
  nameWithType: Hospital.Services
  fullName: Hospital.Services
  spec.csharp:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Services
    name: Services
    href: Hospital.Services.html
  spec.vb:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Services
    name: Services
    href: Hospital.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Hospital.Services.EmailService.SendAppointmentEmailAsync*
  commentId: Overload:Hospital.Services.EmailService.SendAppointmentEmailAsync
  href: Hospital.Services.EmailService.html#Hospital_Services_EmailService_SendAppointmentEmailAsync_Hospital_Models_Appointment_System_String_Hospital_Models_Doctor_Hospital_Models_EmailAction_
  name: SendAppointmentEmailAsync
  nameWithType: EmailService.SendAppointmentEmailAsync
  fullName: Hospital.Services.EmailService.SendAppointmentEmailAsync
- uid: Hospital.Models.Appointment
  commentId: T:Hospital.Models.Appointment
  parent: Hospital.Models
  href: Hospital.Models.Appointment.html
  name: Appointment
  nameWithType: Appointment
  fullName: Hospital.Models.Appointment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Hospital.Models.Doctor
  commentId: T:Hospital.Models.Doctor
  parent: Hospital.Models
  href: Hospital.Models.Doctor.html
  name: Doctor
  nameWithType: Doctor
  fullName: Hospital.Models.Doctor
- uid: Hospital.Models.EmailAction
  commentId: T:Hospital.Models.EmailAction
  parent: Hospital.Models
  href: Hospital.Models.EmailAction.html
  name: EmailAction
  nameWithType: EmailAction
  fullName: Hospital.Models.EmailAction
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Hospital.Models
  commentId: N:Hospital.Models
  href: Hospital.html
  name: Hospital.Models
  nameWithType: Hospital.Models
  fullName: Hospital.Models
  spec.csharp:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Models
    name: Models
    href: Hospital.Models.html
  spec.vb:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Models
    name: Models
    href: Hospital.Models.html
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Hospital.Services.EmailService.ViewAllEmailHistoryAsync*
  commentId: Overload:Hospital.Services.EmailService.ViewAllEmailHistoryAsync
  href: Hospital.Services.EmailService.html#Hospital_Services_EmailService_ViewAllEmailHistoryAsync
  name: ViewAllEmailHistoryAsync
  nameWithType: EmailService.ViewAllEmailHistoryAsync
  fullName: Hospital.Services.EmailService.ViewAllEmailHistoryAsync
