### YamlMime:ManagedReference
items:
- uid: Hospital.Repositories.PatientRepository
  commentId: T:Hospital.Repositories.PatientRepository
  id: PatientRepository
  parent: Hospital.Repositories
  children:
  - Hospital.Repositories.PatientRepository.#ctor
  langs:
  - csharp
  - vb
  name: PatientRepository
  nameWithType: PatientRepository
  fullName: Hospital.Repositories.PatientRepository
  type: Class
  source:
    id: PatientRepository
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Repositories/PatientRepository.cs
    startLine: 8
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Repositories
  summary: >-
    Repository class for performing CRUD operations on Patient entities in the Firebase database.

    Inherits from <xref href="Hospital.Repositories.BaseRepository%601" data-throw-if-not-resolved="false"></xref> and provides access to Patient records.
  example: []
  syntax:
    content: 'public class PatientRepository : BaseRepository<Patient>, IRepository<Patient>'
    content.vb: Public Class PatientRepository Inherits BaseRepository(Of Patient) Implements IRepository(Of Patient)
  inheritance:
  - System.Object
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  implements:
  - Hospital.Interfaces.IRepository{Hospital.Models.Patient}
  inheritedMembers:
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.client
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.jsonOptions
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.baseUrl
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.CreateAsync(Hospital.Models.Patient)
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetAllAsync
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetByIdAsync(System.String)
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.UpdateAsync(System.String,Hospital.Models.Patient)
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteAsync(System.String)
  - Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteByIdAsync(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Hospital.Repositories.PatientRepository.#ctor
  commentId: M:Hospital.Repositories.PatientRepository.#ctor
  id: '#ctor'
  parent: Hospital.Repositories.PatientRepository
  langs:
  - csharp
  - vb
  name: PatientRepository()
  nameWithType: PatientRepository.PatientRepository()
  fullName: Hospital.Repositories.PatientRepository.PatientRepository()
  type: Constructor
  source:
    id: .ctor
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Repositories/PatientRepository.cs
    startLine: 14
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Repositories
  summary: >-
    Initializes a new instance of the <xref href="Hospital.Repositories.PatientRepository" data-throw-if-not-resolved="false"></xref> class.

    Sets the base URL for Patient records in the Firebase database.
  example: []
  syntax:
    content: public PatientRepository()
    content.vb: Public Sub New()
  overload: Hospital.Repositories.PatientRepository.#ctor*
  nameWithType.vb: PatientRepository.New()
  fullName.vb: Hospital.Repositories.PatientRepository.New()
  name.vb: New()
references:
- uid: Hospital.Repositories.BaseRepository`1
  commentId: T:Hospital.Repositories.BaseRepository`1
  href: Hospital.Repositories.BaseRepository-1.html
  name: BaseRepository<T>
  nameWithType: BaseRepository<T>
  fullName: Hospital.Repositories.BaseRepository<T>
  nameWithType.vb: BaseRepository(Of T)
  fullName.vb: Hospital.Repositories.BaseRepository(Of T)
  name.vb: BaseRepository(Of T)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1
    name: BaseRepository
    href: Hospital.Repositories.BaseRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1
    name: BaseRepository
    href: Hospital.Repositories.BaseRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Hospital.Repositories
  commentId: N:Hospital.Repositories
  href: Hospital.html
  name: Hospital.Repositories
  nameWithType: Hospital.Repositories
  fullName: Hospital.Repositories
  spec.csharp:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Repositories
    name: Repositories
    href: Hospital.Repositories.html
  spec.vb:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Repositories
    name: Repositories
    href: Hospital.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  commentId: T:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  parent: Hospital.Repositories
  definition: Hospital.Repositories.BaseRepository`1
  href: Hospital.Repositories.BaseRepository-1.html
  name: BaseRepository<Patient>
  nameWithType: BaseRepository<Patient>
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>
  nameWithType.vb: BaseRepository(Of Patient)
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient)
  name.vb: BaseRepository(Of Patient)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1
    name: BaseRepository
    href: Hospital.Repositories.BaseRepository-1.html
  - name: <
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: '>'
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1
    name: BaseRepository
    href: Hospital.Repositories.BaseRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: )
- uid: Hospital.Interfaces.IRepository{Hospital.Models.Patient}
  commentId: T:Hospital.Interfaces.IRepository{Hospital.Models.Patient}
  parent: Hospital.Interfaces
  definition: Hospital.Interfaces.IRepository`1
  href: Hospital.Interfaces.IRepository-1.html
  name: IRepository<Patient>
  nameWithType: IRepository<Patient>
  fullName: Hospital.Interfaces.IRepository<Hospital.Models.Patient>
  nameWithType.vb: IRepository(Of Patient)
  fullName.vb: Hospital.Interfaces.IRepository(Of Hospital.Models.Patient)
  name.vb: IRepository(Of Patient)
  spec.csharp:
  - uid: Hospital.Interfaces.IRepository`1
    name: IRepository
    href: Hospital.Interfaces.IRepository-1.html
  - name: <
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: '>'
  spec.vb:
  - uid: Hospital.Interfaces.IRepository`1
    name: IRepository
    href: Hospital.Interfaces.IRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: )
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.client
  commentId: F:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.client
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.client
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_client
  name: client
  nameWithType: BaseRepository<Patient>.client
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.client
  nameWithType.vb: BaseRepository(Of Patient).client
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).client
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.jsonOptions
  commentId: F:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.jsonOptions
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.jsonOptions
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_jsonOptions
  name: jsonOptions
  nameWithType: BaseRepository<Patient>.jsonOptions
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.jsonOptions
  nameWithType.vb: BaseRepository(Of Patient).jsonOptions
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).jsonOptions
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.baseUrl
  commentId: F:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.baseUrl
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.baseUrl
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_baseUrl
  name: baseUrl
  nameWithType: BaseRepository<Patient>.baseUrl
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.baseUrl
  nameWithType.vb: BaseRepository(Of Patient).baseUrl
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).baseUrl
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.CreateAsync(Hospital.Models.Patient)
  commentId: M:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.CreateAsync(Hospital.Models.Patient)
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.CreateAsync(`0)
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_CreateAsync__0_
  name: CreateAsync(Patient)
  nameWithType: BaseRepository<Patient>.CreateAsync(Patient)
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.CreateAsync(Hospital.Models.Patient)
  nameWithType.vb: BaseRepository(Of Patient).CreateAsync(Patient)
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).CreateAsync(Hospital.Models.Patient)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.CreateAsync(Hospital.Models.Patient)
    name: CreateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_CreateAsync__0_
  - name: (
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.CreateAsync(Hospital.Models.Patient)
    name: CreateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_CreateAsync__0_
  - name: (
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: )
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetAllAsync
  commentId: M:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetAllAsync
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.GetAllAsync
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: BaseRepository<Patient>.GetAllAsync()
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.GetAllAsync()
  nameWithType.vb: BaseRepository(Of Patient).GetAllAsync()
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).GetAllAsync()
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetAllAsync
    name: GetAllAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetAllAsync
    name: GetAllAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetByIdAsync(System.String)
  commentId: M:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetByIdAsync(System.String)
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.GetByIdAsync(System.String)
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetByIdAsync_System_String_
  name: GetByIdAsync(string)
  nameWithType: BaseRepository<Patient>.GetByIdAsync(string)
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.GetByIdAsync(string)
  nameWithType.vb: BaseRepository(Of Patient).GetByIdAsync(String)
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).GetByIdAsync(String)
  name.vb: GetByIdAsync(String)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetByIdAsync(System.String)
    name: GetByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.GetByIdAsync(System.String)
    name: GetByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.UpdateAsync(System.String,Hospital.Models.Patient)
  commentId: M:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.UpdateAsync(System.String,Hospital.Models.Patient)
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.UpdateAsync(System.String,`0)
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_UpdateAsync_System_String__0_
  name: UpdateAsync(string, Patient)
  nameWithType: BaseRepository<Patient>.UpdateAsync(string, Patient)
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.UpdateAsync(string, Hospital.Models.Patient)
  nameWithType.vb: BaseRepository(Of Patient).UpdateAsync(String, Patient)
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).UpdateAsync(String, Hospital.Models.Patient)
  name.vb: UpdateAsync(String, Patient)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.UpdateAsync(System.String,Hospital.Models.Patient)
    name: UpdateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_UpdateAsync_System_String__0_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.UpdateAsync(System.String,Hospital.Models.Patient)
    name: UpdateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_UpdateAsync_System_String__0_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Hospital.Models.Patient
    name: Patient
    href: Hospital.Models.Patient.html
  - name: )
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteAsync(System.String)
  commentId: M:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteAsync(System.String)
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.DeleteAsync(System.String)
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteAsync_System_String_
  name: DeleteAsync(string)
  nameWithType: BaseRepository<Patient>.DeleteAsync(string)
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.DeleteAsync(string)
  nameWithType.vb: BaseRepository(Of Patient).DeleteAsync(String)
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).DeleteAsync(String)
  name.vb: DeleteAsync(String)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteAsync(System.String)
    name: DeleteAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteAsync(System.String)
    name: DeleteAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteByIdAsync(System.String)
  commentId: M:Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteByIdAsync(System.String)
  parent: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}
  definition: Hospital.Repositories.BaseRepository`1.DeleteByIdAsync(System.String)
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteByIdAsync_System_String_
  name: DeleteByIdAsync(string)
  nameWithType: BaseRepository<Patient>.DeleteByIdAsync(string)
  fullName: Hospital.Repositories.BaseRepository<Hospital.Models.Patient>.DeleteByIdAsync(string)
  nameWithType.vb: BaseRepository(Of Patient).DeleteByIdAsync(String)
  fullName.vb: Hospital.Repositories.BaseRepository(Of Hospital.Models.Patient).DeleteByIdAsync(String)
  name.vb: DeleteByIdAsync(String)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteByIdAsync(System.String)
    name: DeleteByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository{Hospital.Models.Patient}.DeleteByIdAsync(System.String)
    name: DeleteByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Hospital.Interfaces.IRepository`1
  commentId: T:Hospital.Interfaces.IRepository`1
  href: Hospital.Interfaces.IRepository-1.html
  name: IRepository<T>
  nameWithType: IRepository<T>
  fullName: Hospital.Interfaces.IRepository<T>
  nameWithType.vb: IRepository(Of T)
  fullName.vb: Hospital.Interfaces.IRepository(Of T)
  name.vb: IRepository(Of T)
  spec.csharp:
  - uid: Hospital.Interfaces.IRepository`1
    name: IRepository
    href: Hospital.Interfaces.IRepository-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Hospital.Interfaces.IRepository`1
    name: IRepository
    href: Hospital.Interfaces.IRepository-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Hospital.Interfaces
  commentId: N:Hospital.Interfaces
  href: Hospital.html
  name: Hospital.Interfaces
  nameWithType: Hospital.Interfaces
  fullName: Hospital.Interfaces
  spec.csharp:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Interfaces
    name: Interfaces
    href: Hospital.Interfaces.html
  spec.vb:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Interfaces
    name: Interfaces
    href: Hospital.Interfaces.html
- uid: Hospital.Repositories.BaseRepository`1.client
  commentId: F:Hospital.Repositories.BaseRepository`1.client
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_client
  name: client
  nameWithType: BaseRepository<T>.client
  fullName: Hospital.Repositories.BaseRepository<T>.client
  nameWithType.vb: BaseRepository(Of T).client
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).client
- uid: Hospital.Repositories.BaseRepository`1.jsonOptions
  commentId: F:Hospital.Repositories.BaseRepository`1.jsonOptions
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_jsonOptions
  name: jsonOptions
  nameWithType: BaseRepository<T>.jsonOptions
  fullName: Hospital.Repositories.BaseRepository<T>.jsonOptions
  nameWithType.vb: BaseRepository(Of T).jsonOptions
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).jsonOptions
- uid: Hospital.Repositories.BaseRepository`1.baseUrl
  commentId: F:Hospital.Repositories.BaseRepository`1.baseUrl
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_baseUrl
  name: baseUrl
  nameWithType: BaseRepository<T>.baseUrl
  fullName: Hospital.Repositories.BaseRepository<T>.baseUrl
  nameWithType.vb: BaseRepository(Of T).baseUrl
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).baseUrl
- uid: Hospital.Repositories.BaseRepository`1.CreateAsync(`0)
  commentId: M:Hospital.Repositories.BaseRepository`1.CreateAsync(`0)
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_CreateAsync__0_
  name: CreateAsync(T)
  nameWithType: BaseRepository<T>.CreateAsync(T)
  fullName: Hospital.Repositories.BaseRepository<T>.CreateAsync(T)
  nameWithType.vb: BaseRepository(Of T).CreateAsync(T)
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).CreateAsync(T)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1.CreateAsync(`0)
    name: CreateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_CreateAsync__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1.CreateAsync(`0)
    name: CreateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_CreateAsync__0_
  - name: (
  - name: T
  - name: )
- uid: Hospital.Repositories.BaseRepository`1.GetAllAsync
  commentId: M:Hospital.Repositories.BaseRepository`1.GetAllAsync
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetAllAsync
  name: GetAllAsync()
  nameWithType: BaseRepository<T>.GetAllAsync()
  fullName: Hospital.Repositories.BaseRepository<T>.GetAllAsync()
  nameWithType.vb: BaseRepository(Of T).GetAllAsync()
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).GetAllAsync()
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1.GetAllAsync
    name: GetAllAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetAllAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1.GetAllAsync
    name: GetAllAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetAllAsync
  - name: (
  - name: )
- uid: Hospital.Repositories.BaseRepository`1.GetByIdAsync(System.String)
  commentId: M:Hospital.Repositories.BaseRepository`1.GetByIdAsync(System.String)
  isExternal: true
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetByIdAsync_System_String_
  name: GetByIdAsync(string)
  nameWithType: BaseRepository<T>.GetByIdAsync(string)
  fullName: Hospital.Repositories.BaseRepository<T>.GetByIdAsync(string)
  nameWithType.vb: BaseRepository(Of T).GetByIdAsync(String)
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).GetByIdAsync(String)
  name.vb: GetByIdAsync(String)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1.GetByIdAsync(System.String)
    name: GetByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1.GetByIdAsync(System.String)
    name: GetByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_GetByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Hospital.Repositories.BaseRepository`1.UpdateAsync(System.String,`0)
  commentId: M:Hospital.Repositories.BaseRepository`1.UpdateAsync(System.String,`0)
  isExternal: true
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_UpdateAsync_System_String__0_
  name: UpdateAsync(string, T)
  nameWithType: BaseRepository<T>.UpdateAsync(string, T)
  fullName: Hospital.Repositories.BaseRepository<T>.UpdateAsync(string, T)
  nameWithType.vb: BaseRepository(Of T).UpdateAsync(String, T)
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).UpdateAsync(String, T)
  name.vb: UpdateAsync(String, T)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1.UpdateAsync(System.String,`0)
    name: UpdateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_UpdateAsync_System_String__0_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1.UpdateAsync(System.String,`0)
    name: UpdateAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_UpdateAsync_System_String__0_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: Hospital.Repositories.BaseRepository`1.DeleteAsync(System.String)
  commentId: M:Hospital.Repositories.BaseRepository`1.DeleteAsync(System.String)
  isExternal: true
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteAsync_System_String_
  name: DeleteAsync(string)
  nameWithType: BaseRepository<T>.DeleteAsync(string)
  fullName: Hospital.Repositories.BaseRepository<T>.DeleteAsync(string)
  nameWithType.vb: BaseRepository(Of T).DeleteAsync(String)
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).DeleteAsync(String)
  name.vb: DeleteAsync(String)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1.DeleteAsync(System.String)
    name: DeleteAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1.DeleteAsync(System.String)
    name: DeleteAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Hospital.Repositories.BaseRepository`1.DeleteByIdAsync(System.String)
  commentId: M:Hospital.Repositories.BaseRepository`1.DeleteByIdAsync(System.String)
  isExternal: true
  href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteByIdAsync_System_String_
  name: DeleteByIdAsync(string)
  nameWithType: BaseRepository<T>.DeleteByIdAsync(string)
  fullName: Hospital.Repositories.BaseRepository<T>.DeleteByIdAsync(string)
  nameWithType.vb: BaseRepository(Of T).DeleteByIdAsync(String)
  fullName.vb: Hospital.Repositories.BaseRepository(Of T).DeleteByIdAsync(String)
  name.vb: DeleteByIdAsync(String)
  spec.csharp:
  - uid: Hospital.Repositories.BaseRepository`1.DeleteByIdAsync(System.String)
    name: DeleteByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Hospital.Repositories.BaseRepository`1.DeleteByIdAsync(System.String)
    name: DeleteByIdAsync
    href: Hospital.Repositories.BaseRepository-1.html#Hospital_Repositories_BaseRepository_1_DeleteByIdAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Hospital.Repositories.PatientRepository
  commentId: T:Hospital.Repositories.PatientRepository
  href: Hospital.Repositories.PatientRepository.html
  name: PatientRepository
  nameWithType: PatientRepository
  fullName: Hospital.Repositories.PatientRepository
- uid: Hospital.Repositories.PatientRepository.#ctor*
  commentId: Overload:Hospital.Repositories.PatientRepository.#ctor
  href: Hospital.Repositories.PatientRepository.html#Hospital_Repositories_PatientRepository__ctor
  name: PatientRepository
  nameWithType: PatientRepository.PatientRepository
  fullName: Hospital.Repositories.PatientRepository.PatientRepository
  nameWithType.vb: PatientRepository.New
  fullName.vb: Hospital.Repositories.PatientRepository.New
  name.vb: New
