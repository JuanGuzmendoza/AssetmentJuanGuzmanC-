### YamlMime:ManagedReference
items:
- uid: Hospital.Data.DataInitializer
  commentId: T:Hospital.Data.DataInitializer
  id: DataInitializer
  parent: Hospital.Data
  children:
  - Hospital.Data.DataInitializer.InitializeAsync
  langs:
  - csharp
  - vb
  name: DataInitializer
  nameWithType: DataInitializer
  fullName: Hospital.Data.DataInitializer
  type: Class
  source:
    id: DataInitializer
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Data/DataInitializer.cs
    startLine: 8
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Data
  summary: >-
    A static class responsible for initializing the data by loading it from various repositories.

    It loads patients, doctors, appointments, email logs, and users into memory.
  example: []
  syntax:
    content: public static class DataInitializer
    content.vb: Public Module DataInitializer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Hospital.Data.DataInitializer.InitializeAsync
  commentId: M:Hospital.Data.DataInitializer.InitializeAsync
  id: InitializeAsync
  parent: Hospital.Data.DataInitializer
  langs:
  - csharp
  - vb
  name: InitializeAsync()
  nameWithType: DataInitializer.InitializeAsync()
  fullName: Hospital.Data.DataInitializer.InitializeAsync()
  type: Method
  source:
    id: InitializeAsync
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Data/DataInitializer.cs
    startLine: 20
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Data
  summary: >-
    Initializes the data by loading it from repositories into the in-memory data store.

    The method also provides feedback to the user via the console, indicating the status of the operation.
  remarks: >-
    This method calls the <xref href="Hospital.Repositories.PatientRepository" data-throw-if-not-resolved="false"></xref>, <xref href="Hospital.Repositories.DoctorRepository" data-throw-if-not-resolved="false"></xref>, 

    <xref href="Hospital.Repositories.AppointmentRepository" data-throw-if-not-resolved="false"></xref>, <xref href="Hospital.Repositories.EmailRepository" data-throw-if-not-resolved="false"></xref>, and <xref href="Hospital.Repositories.UserRepository" data-throw-if-not-resolved="false"></xref> 

    to retrieve data and store it in the <xref href="Hospital.Data.DataStore" data-throw-if-not-resolved="false"></xref> static class.
  example: []
  syntax:
    content: public static Task InitializeAsync()
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous operation.
    content.vb: Public Shared Function InitializeAsync() As Task
  overload: Hospital.Data.DataInitializer.InitializeAsync*
references:
- uid: Hospital.Data
  commentId: N:Hospital.Data
  href: Hospital.html
  name: Hospital.Data
  nameWithType: Hospital.Data
  fullName: Hospital.Data
  spec.csharp:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Data
    name: Data
    href: Hospital.Data.html
  spec.vb:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Data
    name: Data
    href: Hospital.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Hospital.Repositories.PatientRepository
  commentId: T:Hospital.Repositories.PatientRepository
  href: Hospital.Repositories.PatientRepository.html
  name: PatientRepository
  nameWithType: PatientRepository
  fullName: Hospital.Repositories.PatientRepository
- uid: Hospital.Repositories.DoctorRepository
  commentId: T:Hospital.Repositories.DoctorRepository
  href: Hospital.Repositories.DoctorRepository.html
  name: DoctorRepository
  nameWithType: DoctorRepository
  fullName: Hospital.Repositories.DoctorRepository
- uid: Hospital.Repositories.AppointmentRepository
  commentId: T:Hospital.Repositories.AppointmentRepository
  href: Hospital.Repositories.AppointmentRepository.html
  name: AppointmentRepository
  nameWithType: AppointmentRepository
  fullName: Hospital.Repositories.AppointmentRepository
- uid: Hospital.Repositories.EmailRepository
  commentId: T:Hospital.Repositories.EmailRepository
  href: Hospital.Repositories.EmailRepository.html
  name: EmailRepository
  nameWithType: EmailRepository
  fullName: Hospital.Repositories.EmailRepository
- uid: Hospital.Repositories.UserRepository
  commentId: T:Hospital.Repositories.UserRepository
  href: Hospital.Repositories.UserRepository.html
  name: UserRepository
  nameWithType: UserRepository
  fullName: Hospital.Repositories.UserRepository
- uid: Hospital.Data.DataStore
  commentId: T:Hospital.Data.DataStore
  href: Hospital.Data.DataStore.html
  name: DataStore
  nameWithType: DataStore
  fullName: Hospital.Data.DataStore
- uid: Hospital.Data.DataInitializer.InitializeAsync*
  commentId: Overload:Hospital.Data.DataInitializer.InitializeAsync
  href: Hospital.Data.DataInitializer.html#Hospital_Data_DataInitializer_InitializeAsync
  name: InitializeAsync
  nameWithType: DataInitializer.InitializeAsync
  fullName: Hospital.Data.DataInitializer.InitializeAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
