### YamlMime:ManagedReference
items:
- uid: Hospital.Services.GeminiService
  commentId: T:Hospital.Services.GeminiService
  id: GeminiService
  parent: Hospital.Services
  children:
  - Hospital.Services.GeminiService.AskClinicQuestionAsync(System.String)
  - Hospital.Services.GeminiService.SelectDoctorAsync(System.String,System.Collections.Generic.Dictionary{System.String,Hospital.Models.Doctor})
  langs:
  - csharp
  - vb
  name: GeminiService
  nameWithType: GeminiService
  fullName: Hospital.Services.GeminiService
  type: Class
  source:
    id: GeminiService
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Service/IA/GeminiService.cs
    startLine: 10
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Services
  summary: Service class to interact with the Gemini API for generating content and making decisions based on hospital data.
  example: []
  syntax:
    content: public static class GeminiService
    content.vb: Public Module GeminiService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Hospital.Services.GeminiService.SelectDoctorAsync(System.String,System.Collections.Generic.Dictionary{System.String,Hospital.Models.Doctor})
  commentId: M:Hospital.Services.GeminiService.SelectDoctorAsync(System.String,System.Collections.Generic.Dictionary{System.String,Hospital.Models.Doctor})
  id: SelectDoctorAsync(System.String,System.Collections.Generic.Dictionary{System.String,Hospital.Models.Doctor})
  parent: Hospital.Services.GeminiService
  langs:
  - csharp
  - vb
  name: SelectDoctorAsync(string, Dictionary<string, Doctor>)
  nameWithType: GeminiService.SelectDoctorAsync(string, Dictionary<string, Doctor>)
  fullName: Hospital.Services.GeminiService.SelectDoctorAsync(string, System.Collections.Generic.Dictionary<string, Hospital.Models.Doctor>)
  type: Method
  source:
    id: SelectDoctorAsync
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Service/IA/GeminiService.cs
    startLine: 25
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Services
  summary: >-
    Method to select the most suitable doctor based on the symptoms provided by the user.

    Sends a request to the Gemini API to analyze the symptoms and recommend a doctor.
  example: []
  syntax:
    content: public static Task<SelectedDoctorResult> SelectDoctorAsync(string symptoms, Dictionary<string, Doctor> doctors)
    parameters:
    - id: symptoms
      type: System.String
      description: A string describing the patient's symptoms.
    - id: doctors
      type: System.Collections.Generic.Dictionary{System.String,Hospital.Models.Doctor}
      description: A dictionary of available doctors.
    return:
      type: System.Threading.Tasks.Task{Hospital.Services.SelectedDoctorResult}
      description: A <xref href="Hospital.Services.SelectedDoctorResult" data-throw-if-not-resolved="false"></xref> containing the selected doctor's ID and the reason for selection.
    content.vb: Public Shared Function SelectDoctorAsync(symptoms As String, doctors As Dictionary(Of String, Doctor)) As Task(Of SelectedDoctorResult)
  overload: Hospital.Services.GeminiService.SelectDoctorAsync*
  nameWithType.vb: GeminiService.SelectDoctorAsync(String, Dictionary(Of String, Doctor))
  fullName.vb: Hospital.Services.GeminiService.SelectDoctorAsync(String, System.Collections.Generic.Dictionary(Of String, Hospital.Models.Doctor))
  name.vb: SelectDoctorAsync(String, Dictionary(Of String, Doctor))
- uid: Hospital.Services.GeminiService.AskClinicQuestionAsync(System.String)
  commentId: M:Hospital.Services.GeminiService.AskClinicQuestionAsync(System.String)
  id: AskClinicQuestionAsync(System.String)
  parent: Hospital.Services.GeminiService
  langs:
  - csharp
  - vb
  name: AskClinicQuestionAsync(string)
  nameWithType: GeminiService.AskClinicQuestionAsync(string)
  fullName: Hospital.Services.GeminiService.AskClinicQuestionAsync(string)
  type: Method
  source:
    id: AskClinicQuestionAsync
    path: /home/Coder/Escritorio/Assetment_Desarollo/PruebaJuanGuzman/Service/IA/GeminiService.cs
    startLine: 111
  assemblies:
  - PruebaJuanGuzman
  namespace: Hospital.Services
  summary: >-
    Method to ask general clinic-related questions using stored data from DataStore.

    Sends the question along with the hospital's data to the Gemini API for an answer.
  example: []
  syntax:
    content: public static Task<string> AskClinicQuestionAsync(string question)
    parameters:
    - id: question
      type: System.String
      description: The question to ask the Gemini model.
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A string containing the response from Gemini to the question.
    content.vb: Public Shared Function AskClinicQuestionAsync(question As String) As Task(Of String)
  overload: Hospital.Services.GeminiService.AskClinicQuestionAsync*
  nameWithType.vb: GeminiService.AskClinicQuestionAsync(String)
  fullName.vb: Hospital.Services.GeminiService.AskClinicQuestionAsync(String)
  name.vb: AskClinicQuestionAsync(String)
references:
- uid: Hospital.Services
  commentId: N:Hospital.Services
  href: Hospital.html
  name: Hospital.Services
  nameWithType: Hospital.Services
  fullName: Hospital.Services
  spec.csharp:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Services
    name: Services
    href: Hospital.Services.html
  spec.vb:
  - uid: Hospital
    name: Hospital
    href: Hospital.html
  - name: .
  - uid: Hospital.Services
    name: Services
    href: Hospital.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Hospital.Services.SelectedDoctorResult
  commentId: T:Hospital.Services.SelectedDoctorResult
  href: Hospital.Services.SelectedDoctorResult.html
  name: SelectedDoctorResult
  nameWithType: SelectedDoctorResult
  fullName: Hospital.Services.SelectedDoctorResult
- uid: Hospital.Services.GeminiService.SelectDoctorAsync*
  commentId: Overload:Hospital.Services.GeminiService.SelectDoctorAsync
  href: Hospital.Services.GeminiService.html#Hospital_Services_GeminiService_SelectDoctorAsync_System_String_System_Collections_Generic_Dictionary_System_String_Hospital_Models_Doctor__
  name: SelectDoctorAsync
  nameWithType: GeminiService.SelectDoctorAsync
  fullName: Hospital.Services.GeminiService.SelectDoctorAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.Dictionary{System.String,Hospital.Models.Doctor}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Hospital.Models.Doctor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, Doctor>
  nameWithType: Dictionary<string, Doctor>
  fullName: System.Collections.Generic.Dictionary<string, Hospital.Models.Doctor>
  nameWithType.vb: Dictionary(Of String, Doctor)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Hospital.Models.Doctor)
  name.vb: Dictionary(Of String, Doctor)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Hospital.Models.Doctor
    name: Doctor
    href: Hospital.Models.Doctor.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Hospital.Models.Doctor
    name: Doctor
    href: Hospital.Models.Doctor.html
  - name: )
- uid: System.Threading.Tasks.Task{Hospital.Services.SelectedDoctorResult}
  commentId: T:System.Threading.Tasks.Task{Hospital.Services.SelectedDoctorResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SelectedDoctorResult>
  nameWithType: Task<SelectedDoctorResult>
  fullName: System.Threading.Tasks.Task<Hospital.Services.SelectedDoctorResult>
  nameWithType.vb: Task(Of SelectedDoctorResult)
  fullName.vb: System.Threading.Tasks.Task(Of Hospital.Services.SelectedDoctorResult)
  name.vb: Task(Of SelectedDoctorResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Hospital.Services.SelectedDoctorResult
    name: SelectedDoctorResult
    href: Hospital.Services.SelectedDoctorResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Hospital.Services.SelectedDoctorResult
    name: SelectedDoctorResult
    href: Hospital.Services.SelectedDoctorResult.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Hospital.Services.GeminiService.AskClinicQuestionAsync*
  commentId: Overload:Hospital.Services.GeminiService.AskClinicQuestionAsync
  href: Hospital.Services.GeminiService.html#Hospital_Services_GeminiService_AskClinicQuestionAsync_System_String_
  name: AskClinicQuestionAsync
  nameWithType: GeminiService.AskClinicQuestionAsync
  fullName: Hospital.Services.GeminiService.AskClinicQuestionAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
